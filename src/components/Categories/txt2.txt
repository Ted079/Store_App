import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { useGetProductWithFilterQuery } from "../../store/api/apiSlice";
import styles from "./Category.module.scss";
import Products from "../Products/Products";
import { useSelector } from "react-redux";

function Category() {
  const { id } = useParams();
  const { list } = useSelector(({ categories }) => categories);

  const defaultValues = {
    title: "",
    price_min: 0,
    price_max: 0,
  };

  const defaultParams = {
    categoryId: id,
    ...defaultValues,
  };

  const [values, setValues] = useState(defaultValues);
  const [params, setParams] = useState(defaultParams);
  const [category, setCategory] = useState("");

  useEffect(() => {
    if (!id) return;

    setParams({ ...defaultParams, categoryId: id });
  }, [id]);

  useEffect(() => {
    if (!id && !list.length) return;

    const { name } = list.find((item) => item.id === id * 1);

    setCategory(name);
  }, [id, list]);

  const { data, isLoading, isSuccess } = useGetProductWithFilterQuery(params);

  const handleChange = ({ target: { name, value } }) => {
    setValues({ ...values, [name]: value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    setParams({ ...params, ...values });
  };

  return (
    <div className={styles.wrapper}>
      <h2 className={styles.title}>{category}</h2>
      <form className={styles.filters} onSubmit={handleSubmit}>
        <div className={styles.filter}>
          <input
            type="text"
            name="title"
            onChange={handleChange}
            placeholder="Product name"
            value={values.title}
          />
          <div />
          <div className={styles.filter}>
            <input
              type="number"
              name="price_min"
              onChange={handleChange}
              placeholder="0"
              value={values.price_min}
            />
          </div>
          <div className={styles.filter}>
            <input
              type="number"
              name="price_max"
              onChange={handleChange}
              placeholder="0"
              value={values.price_max}
            />
          </div>
        </div>
        <button type="submit" hidden />
      </form>

      {isLoading ? (
        <section className="preloader">...Loading</section>
      ) : !data.length || !isSuccess ? (
        <div className={styles.back}>
          <span>No result!</span>
          <button>Reset</button>
        </div>
      ) : (
        <Products
          products={data}
          amount={data.length}
          title=""
          style={{ padding: 0 }}
        />
      )}
    </div>
  );
}

export default Category;
